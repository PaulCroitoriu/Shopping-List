{"ast":null,"code":"import _regeneratorRuntime from \"/Users/paulcroitoriu/Desktop/React-projects/personal_shopping_list/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _classCallCheck from \"/Users/paulcroitoriu/Desktop/React-projects/personal_shopping_list/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/paulcroitoriu/Desktop/React-projects/personal_shopping_list/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/paulcroitoriu/Desktop/React-projects/personal_shopping_list/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/paulcroitoriu/Desktop/React-projects/personal_shopping_list/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/paulcroitoriu/Desktop/React-projects/personal_shopping_list/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/paulcroitoriu/Desktop/React-projects/personal_shopping_list/src/withDataFetching.js\";\nimport React from 'react';\n\nvar withDataFetching = function withDataFetching(props) {\n  return function (WrappedComponent) {\n    var WithDataFetching =\n    /*#__PURE__*/\n    function (_React$Component) {\n      _inherits(WithDataFetching, _React$Component);\n\n      function WithDataFetching() {\n        var _this;\n\n        _classCallCheck(this, WithDataFetching);\n\n        _this = _possibleConstructorReturn(this, _getPrototypeOf(WithDataFetching).call(this));\n        _this.state = {\n          data: [],\n          loading: false,\n          error: ''\n        };\n        return _this;\n      }\n\n      _createClass(WithDataFetching, [{\n        key: \"componentDidMount\",\n        value: function componentDidMount() {\n          var data, dataJSON;\n          return _regeneratorRuntime.async(function componentDidMount$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  _context.prev = 0;\n                  _context.next = 3;\n                  return _regeneratorRuntime.awrap(fetch(props.dataSource));\n\n                case 3:\n                  data = _context.sent;\n                  _context.next = 6;\n                  return _regeneratorRuntime.awrap(data.json());\n\n                case 6:\n                  dataJSON = _context.sent;\n\n                  if (dataJSON) {\n                    this.setState({\n                      data: dataJSON,\n                      loading: false\n                    });\n                  }\n\n                  _context.next = 13;\n                  break;\n\n                case 10:\n                  _context.prev = 10;\n                  _context.t0 = _context[\"catch\"](0);\n                  this.setState({\n                    loading: false,\n                    error: _context.t0.message\n                  });\n\n                case 13:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, null, this, [[0, 10]]);\n        }\n      }, {\n        key: \"render\",\n        value: function render() {\n          var _this$state = this.state,\n              data = _this$state.data,\n              loading = _this$state.loading,\n              error = _this$state.error;\n          return React.createElement(WrappedComponent, Object.assign({\n            data: data,\n            loading: loading,\n            error: error\n          }, this.props, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 37\n            },\n            __self: this\n          }));\n        }\n      }]);\n\n      return WithDataFetching;\n    }(React.Component);\n\n    WithDataFetching.displayName = \"WithDataFetching(\".concat(WrappedComponent.name, \")\");\n    return WithDataFetching;\n  };\n};\n\nexport default withDataFetching;","map":{"version":3,"sources":["/Users/paulcroitoriu/Desktop/React-projects/personal_shopping_list/src/withDataFetching.js"],"names":["React","withDataFetching","props","WrappedComponent","WithDataFetching","state","data","loading","error","fetch","dataSource","json","dataJSON","setState","message","Component","displayName","name"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,CAAAC,KAAK;AAAA,SAAI,UAAAC,gBAAgB,EAAI;AAAA,QAC9CC,gBAD8C;AAAA;AAAA;AAAA;;AAElD,kCAAc;AAAA;;AAAA;;AACZ;AACA,cAAKC,KAAL,GAAa;AACXC,UAAAA,IAAI,EAAE,EADK;AAEXC,UAAAA,OAAO,EAAE,KAFE;AAGXC,UAAAA,KAAK,EAAE;AAHI,SAAb;AAFY;AAOb;;AATiD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mDAa3BC,KAAK,CAACP,KAAK,CAACQ,UAAP,CAbsB;;AAAA;AAaxCJ,kBAAAA,IAbwC;AAAA;AAAA,mDAcvBA,IAAI,CAACK,IAAL,EAduB;;AAAA;AAcxCC,kBAAAA,QAdwC;;AAgB9C,sBAAIA,QAAJ,EAAc;AACZ,yBAAKC,QAAL,CAAc;AACZP,sBAAAA,IAAI,EAAEM,QADM;AAEZL,sBAAAA,OAAO,EAAE;AAFG,qBAAd;AAID;;AArB6C;AAAA;;AAAA;AAAA;AAAA;AAuB9C,uBAAKM,QAAL,CAAc;AACZN,oBAAAA,OAAO,EAAE,KADG;AAEZC,oBAAAA,KAAK,EAAE,YAAMM;AAFD,mBAAd;;AAvB8C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCA8BzC;AAAA,4BAC0B,KAAKT,KAD/B;AAAA,cACCC,IADD,eACCA,IADD;AAAA,cACOC,OADP,eACOA,OADP;AAAA,cACgBC,KADhB,eACgBA,KADhB;AAGP,iBACE,oBAAC,gBAAD;AACE,YAAA,IAAI,EAAEF,IADR;AAEE,YAAA,OAAO,EAAEC,OAFX;AAGE,YAAA,KAAK,EAAEC;AAHT,aAIM,KAAKN,KAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF;AAQD;AAzCiD;;AAAA;AAAA,MACrBF,KAAK,CAACe,SADe;;AA4CpDX,IAAAA,gBAAgB,CAACY,WAAjB,8BAAmDb,gBAAgB,CAACc,IAApE;AAEA,WAAOb,gBAAP;AACD,GA/C6B;AAAA,CAA9B;;AAiDA,eAAeH,gBAAf","sourcesContent":["import React from 'react';\n\nconst withDataFetching = props => WrappedComponent => {\n  class WithDataFetching extends React.Component {\n    constructor() {\n      super();\n      this.state = {\n        data: [],\n        loading: false,\n        error: '',\n      };\n    }\n\n    async componentDidMount() {\n      try {\n        const data = await fetch(props.dataSource);\n        const dataJSON = await data.json();\n\n        if (dataJSON) {\n          this.setState({\n            data: dataJSON,\n            loading: false,\n          });\n        }\n      } catch (error) {\n        this.setState({\n          loading: false,\n          error: error.message,\n        });\n      }\n    }\n\n    render() {\n      const { data, loading, error } = this.state;\n\n      return (\n        <WrappedComponent\n          data={data}\n          loading={loading}\n          error={error}\n          {...this.props}\n        />\n      );\n    }\n  }\n\n  WithDataFetching.displayName = `WithDataFetching(${WrappedComponent.name})`;\n\n  return WithDataFetching;\n};\n\nexport default withDataFetching;\n"]},"metadata":{},"sourceType":"module"}